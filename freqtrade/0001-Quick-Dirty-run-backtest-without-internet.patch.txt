From 762aa208e098f3e28bdbc7f86ae92687f92efbc8 Mon Sep 17 00:00:00 2001
From: c0d3d3v <c0d3d3v@mag-keinen-spam.de>
Date: Fri, 17 Dec 2021 22:06:51 +0100
Subject: [PATCH] Quick & Dirty - run backtest without internet

---
 freqtrade/data/history/history_utils.py      | 16 ++++++++--------
 freqtrade/optimize/backtesting.py            |  5 ++---
 freqtrade/plugins/pairlist/StaticPairList.py | 14 +++++++-------
 freqtrade/plugins/pairlistmanager.py         | 11 +++++------
 4 files changed, 22 insertions(+), 24 deletions(-)

diff --git a/freqtrade/data/history/history_utils.py b/freqtrade/data/history/history_utils.py
index e6b8db322..4abe6db7d 100644
--- a/freqtrade/data/history/history_utils.py
+++ b/freqtrade/data/history/history_utils.py
@@ -238,10 +238,10 @@ def refresh_backtest_ohlcv_data(exchange: Exchange, pairs: List[str], timeframes
     pairs_not_available = []
     data_handler = get_datahandler(datadir, data_format)
     for idx, pair in enumerate(pairs, start=1):
-        if pair not in exchange.markets:
-            pairs_not_available.append(pair)
-            logger.info(f"Skipping pair {pair}...")
-            continue
+        # if pair not in exchange.markets:
+        #     pairs_not_available.append(pair)
+        #     logger.info(f"Skipping pair {pair}...")
+        #     continue
         for timeframe in timeframes:
 
             if erase:
@@ -335,10 +335,10 @@ def refresh_backtest_trades_data(exchange: Exchange, pairs: List[str], datadir:
     pairs_not_available = []
     data_handler = get_datahandler(datadir, data_format=data_format)
     for pair in pairs:
-        if pair not in exchange.markets:
-            pairs_not_available.append(pair)
-            logger.info(f"Skipping pair {pair}...")
-            continue
+        # if pair not in exchange.markets:
+        #     pairs_not_available.append(pair)
+        #     logger.info(f"Skipping pair {pair}...")
+        #     continue
 
         if erase:
             if data_handler.trades_purge(pair):
diff --git a/freqtrade/optimize/backtesting.py b/freqtrade/optimize/backtesting.py
index d4b51d04d..3892d1a0d 100644
--- a/freqtrade/optimize/backtesting.py
+++ b/freqtrade/optimize/backtesting.py
@@ -65,8 +65,7 @@ class Backtesting:
         config['dry_run'] = True
         self.strategylist: List[IStrategy] = []
         self.all_results: Dict[str, Dict] = {}
-
-        self.exchange = ExchangeResolver.load_exchange(self.config['exchange']['name'], self.config)
+        self.exchange = ExchangeResolver.load_exchange(self.config['exchange']['name'], self.config, validate=False)
         self.dataprovider = DataProvider(self.config, self.exchange)
 
         if self.config.get('strategy_list', None):
@@ -441,7 +440,7 @@ class Backtesting:
         # Move rate to within the candle's low/high rate
         propose_rate = min(max(propose_rate, row[LOW_IDX]), row[HIGH_IDX])
 
-        min_stake_amount = self.exchange.get_min_pair_stake_amount(pair, propose_rate, -0.05) or 0
+        min_stake_amount = 0 # self.exchange.get_min_pair_stake_amount(pair, propose_rate, -0.05) or 0
         max_stake_amount = self.wallets.get_available_stake_amount()
 
         stake_amount = strategy_safe_wrapper(self.strategy.custom_stake_amount,
diff --git a/freqtrade/plugins/pairlist/StaticPairList.py b/freqtrade/plugins/pairlist/StaticPairList.py
index 30fa474e4..d6523d7b8 100644
--- a/freqtrade/plugins/pairlist/StaticPairList.py
+++ b/freqtrade/plugins/pairlist/StaticPairList.py
@@ -44,13 +44,13 @@ class StaticPairList(IPairList):
         :param tickers: Tickers (from exchange.get_tickers()). May be cached.
         :return: List of pairs
         """
-        if self._allow_inactive:
-            return self.verify_whitelist(
-                self._config['exchange']['pair_whitelist'], logger.info, keep_invalid=True
-            )
-        else:
-            return self._whitelist_for_active_markets(
-                self.verify_whitelist(self._config['exchange']['pair_whitelist'], logger.info))
+        # if self._allow_inactive:
+        return self.verify_whitelist(
+            self._config['exchange']['pair_whitelist'], logger.info, keep_invalid=True
+        )
+        # else:
+        #     return self._whitelist_for_active_markets(
+        #         self.verify_whitelist(self._config['exchange']['pair_whitelist'], logger.info))
 
     def filter_pairlist(self, pairlist: List[str], tickers: Dict) -> List[str]:
         """
diff --git a/freqtrade/plugins/pairlistmanager.py b/freqtrade/plugins/pairlistmanager.py
index face79729..6aeb5fca2 100644
--- a/freqtrade/plugins/pairlistmanager.py
+++ b/freqtrade/plugins/pairlistmanager.py
@@ -57,7 +57,7 @@ class PairListManager():
     @property
     def expanded_blacklist(self) -> List[str]:
         """The expanded blacklist (including wildcard expansion)"""
-        return expand_pairlist(self._blacklist, self._exchange.get_markets().keys())
+        return self._blacklist # expand_pairlist(self._blacklist, self._exchange.get_markets().keys())
 
     @property
     def name_list(self) -> List[str]:
@@ -76,9 +76,8 @@ class PairListManager():
         """Run pairlist through all configured Pairlist Handlers."""
         # Tickers should be cached to avoid calling the exchange on each call.
         tickers: Dict = {}
-        if self._tickers_needed:
-            tickers = self._get_cached_tickers()
-
+        # if self._tickers_needed:
+        #     tickers = self._get_cached_tickers()
         # Generate the pairlist with first Pairlist Handler in the chain
         pairlist = self._pairlist_handlers[0].gen_pairlist(tickers)
 
@@ -127,8 +126,8 @@ class PairListManager():
         :return: pairlist - whitelisted pairs
         """
         try:
-
-            whitelist = expand_pairlist(pairlist, self._exchange.get_markets().keys(), keep_invalid)
+            whitelist = pairlist
+            #whitelist = expand_pairlist(pairlist, self._exchange.get_markets().keys(), keep_invalid)
         except ValueError as err:
             logger.error(f"Pair whitelist contains an invalid Wildcard: {err}")
             return []
-- 
2.34.1

