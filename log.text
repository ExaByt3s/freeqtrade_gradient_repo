2022-12-02 16:06:33.574820: I tensorflow/compiler/plugin/poplar/driver/poplar_platform.cc:43] Poplar version: 2.6.0 (e0ab3b4f12) Poplar package: a313c81b39
2022-12-02 16:06:41.465604: I tensorflow/compiler/plugin/poplar/driver/poplar_executor.cc:1618] TensorFlow device /device:IPU:0 attached to 16 IPUs with Poplar device ID: 30
2022-12-02 16:06:41.771624: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)
2022-12-02 16:06:42.709225: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:210] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2022-12-02 16:06:42.747013: W tensorflow/core/framework/op_kernel.cc:1692] OP_REQUIRES failed at while_op.cc:351 : Invalid argument: Detected unsupported operations when trying to compile graph while_model_relative_position_map_while_body_2347_rewritten_const_0_rearrange_0[] on XLA_IPU_JIT: Where (No registered 'Where' OpKernel for XLA_IPU_JIT devices compatible with node {{node while/model/relative_position/map/while/boolean_mask/Where}}){{node while/model/relative_position/map/while/boolean_mask/Where}}
The op is created at: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)
File "/notebooks/keras_layer.py", line 23, in _f
  x = tf.boolean_mask(x, self.mask)

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)

2022-12-02 16:06:42.748090: W tensorflow/core/framework/op_kernel.cc:1692] OP_REQUIRES failed at while_op.cc:351 : Invalid argument: Detected unsupported operations when trying to compile graph while_model_relative_position_map_while_body_2347_rewritten_const_0_rearrange_0[] on XLA_IPU_JIT: Where (No registered 'Where' OpKernel for XLA_IPU_JIT devices compatible with node {{node while/model/relative_position/map/while/boolean_mask/Where}}){{node while/model/relative_position/map/while/boolean_mask/Where}}
The op is created at: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)
File "/notebooks/keras_layer.py", line 23, in _f
  x = tf.boolean_mask(x, self.mask)

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)

	 [[while/model/relative_position/map/while]]

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):

2022-12-02 16:06:42.753746: W tensorflow/core/framework/op_kernel.cc:1692] OP_REQUIRES failed at xla_ops.cc:261 : Invalid argument: Detected unsupported operations when trying to compile graph while_model_relative_position_map_while_body_2347_rewritten_const_0_rearrange_0[] on XLA_IPU_JIT: Where (No registered 'Where' OpKernel for XLA_IPU_JIT devices compatible with node {{node while/model/relative_position/map/while/boolean_mask/Where}}){{node while/model/relative_position/map/while/boolean_mask/Where}}
The op is created at: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)
File "/notebooks/keras_layer.py", line 23, in _f
  x = tf.boolean_mask(x, self.mask)

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)

	 [[while/model/relative_position/map/while]]

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):

	 [[while]]
['heikin-ashi_close']
ratio: 400.0000
length: all: 104651
length: train: 80000
length: test: 200
All of answer: 0: 100.0000(%)
All of answer: 1: 100.0000(%)
All of answer: 2: 0.0000(%)
Train part of answer: 0: 100.0000(%)
Train part of answer: 1: 100.0000(%)
Train part of answer: 2: 0.0000(%)
Test part of answer: 0: 100.0000(%)
Test part of answer: 1: 100.0000(%)
Test part of answer: 2: 0.0000(%)
device: [LogicalDevice(name='/device:CPU:0', device_type='CPU'), LogicalDevice(name='/device:IPU:0', device_type='IPU'), LogicalDevice(name='/device:IPU:1', device_type='IPU'), LogicalDevice(name='/device:IPU:2', device_type='IPU'), LogicalDevice(name='/device:IPU:3', device_type='IPU'), LogicalDevice(name='/device:IPU:4', device_type='IPU'), LogicalDevice(name='/device:IPU:5', device_type='IPU'), LogicalDevice(name='/device:IPU:6', device_type='IPU'), LogicalDevice(name='/device:IPU:7', device_type='IPU'), LogicalDevice(name='/device:IPU:8', device_type='IPU'), LogicalDevice(name='/device:IPU:9', device_type='IPU'), LogicalDevice(name='/device:IPU:10', device_type='IPU'), LogicalDevice(name='/device:IPU:11', device_type='IPU'), LogicalDevice(name='/device:IPU:12', device_type='IPU'), LogicalDevice(name='/device:IPU:13', device_type='IPU'), LogicalDevice(name='/device:IPU:14', device_type='IPU'), LogicalDevice(name='/device:IPU:15', device_type='IPU')]
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_1 (InputLayer)            [(None, 200, 1)]     0                                            
__________________________________________________________________________________________________
flatten (Flatten)               (None, 200)          0           input_1[0][0]                    
__________________________________________________________________________________________________
flatten_1 (Flatten)             (None, 200)          0           input_1[0][0]                    
__________________________________________________________________________________________________
flatten_2 (Flatten)             (None, 200)          0           input_1[0][0]                    
__________________________________________________________________________________________________
dense (Dense)                   (None, 16)           3216        flatten[0][0]                    
__________________________________________________________________________________________________
dense_3 (Dense)                 (None, 16)           3216        flatten_1[0][0]                  
__________________________________________________________________________________________________
dense_6 (Dense)                 (None, 16)           3216        flatten_2[0][0]                  
__________________________________________________________________________________________________
activation (Activation)         (None, 16)           0           dense[0][0]                      
__________________________________________________________________________________________________
activation_2 (Activation)       (None, 16)           0           dense_3[0][0]                    
__________________________________________________________________________________________________
activation_4 (Activation)       (None, 16)           0           dense_6[0][0]                    
__________________________________________________________________________________________________
dense_1 (Dense)                 (None, 8)            136         activation[0][0]                 
__________________________________________________________________________________________________
dense_4 (Dense)                 (None, 8)            136         activation_2[0][0]               
__________________________________________________________________________________________________
dense_7 (Dense)                 (None, 8)            136         activation_4[0][0]               
__________________________________________________________________________________________________
activation_1 (Activation)       (None, 8)            0           dense_1[0][0]                    
__________________________________________________________________________________________________
activation_3 (Activation)       (None, 8)            0           dense_4[0][0]                    
__________________________________________________________________________________________________
activation_5 (Activation)       (None, 8)            0           dense_7[0][0]                    
__________________________________________________________________________________________________
dense_2 (Dense)                 (None, 1)            9           activation_1[0][0]               
__________________________________________________________________________________________________
dense_5 (Dense)                 (None, 1)            9           activation_3[0][0]               
__________________________________________________________________________________________________
dense_8 (Dense)                 (None, 1)            9           activation_5[0][0]               
__________________________________________________________________________________________________
concatenate (Concatenate)       (None, 3)            0           dense_2[0][0]                    
                                                                 dense_5[0][0]                    
                                                                 dense_8[0][0]                    
__________________________________________________________________________________________________
flatten_3 (Flatten)             (None, 3)            0           concatenate[0][0]                
__________________________________________________________________________________________________
relative_position (RelativePosi (None, 3)            9           flatten_3[0][0]                  
__________________________________________________________________________________________________
batch_normalization (BatchNorma (None, 3)            12          relative_position[0][0]          
__________________________________________________________________________________________________
dense_9 (Dense)                 (None, 32)           128         batch_normalization[0][0]        
__________________________________________________________________________________________________
batch_normalization_1 (BatchNor (None, 32)           128         dense_9[0][0]                    
__________________________________________________________________________________________________
activation_6 (Activation)       (None, 32)           0           batch_normalization_1[0][0]      
__________________________________________________________________________________________________
dense_10 (Dense)                (None, 16)           528         activation_6[0][0]               
__________________________________________________________________________________________________
batch_normalization_2 (BatchNor (None, 16)           64          dense_10[0][0]                   
__________________________________________________________________________________________________
activation_7 (Activation)       (None, 16)           0           batch_normalization_2[0][0]      
__________________________________________________________________________________________________
dense_11 (Dense)                (None, 2)            34          activation_7[0][0]               
__________________________________________________________________________________________________
activation_8 (Activation)       (None, 2)            0           dense_11[0][0]                   
==================================================================================================
Total params: 10,986
Trainable params: 10,875
Non-trainable params: 111
__________________________________________________________________________________________________
Traceback (most recent call last):
  File "test_keras.py", line 375, in <module>
    history = model.fit(x_train, y_train, batch_size=200, epochs=1,
  File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
    return delegate_func(obj, *args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1379, in _fit_delegate
    six.reraise(*sys.exc_info())
  File "/usr/local/lib/python3.8/dist-packages/six.py", line 703, in reraise
    raise value
  File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
    self.distribute_strategy.run(train_function,
  File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
    result = func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/ipu/ipu_strategy.py", line 107, in run
    return super().run(fn, args, kwargs, options)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/distribute/distribute_lib.py", line 1286, in run
    return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/distribute/distribute_lib.py", line 2849, in call_for_each_replica
    return self._call_for_each_replica(fn, args, kwargs)
  File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
    result = func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/ipu/ipu_strategy.py", line 208, in _call_for_each_replica
    outputs = fn(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/def_function.py", line 885, in __call__
    result = self._call(*args, **kwds)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/def_function.py", line 917, in _call
    return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/function.py", line 3039, in __call__
    return graph_function._call_flat(
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/function.py", line 1963, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/function.py", line 591, in call
    outputs = execute.execute(
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/eager/execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: Detected unsupported operations when trying to compile graph while_model_relative_position_map_while_body_2347_rewritten_const_0_rearrange_0[] on XLA_IPU_JIT: Where (No registered 'Where' OpKernel for XLA_IPU_JIT devices compatible with node {{node while/model/relative_position/map/while/boolean_mask/Where}}){{node while/model/relative_position/map/while/boolean_mask/Where}}
The op is created at: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)
File "/notebooks/keras_layer.py", line 23, in _f
  x = tf.boolean_mask(x, self.mask)

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 505, in train_function
  outfeed.enqueue(self.train_step(next(iterator)))
File "/usr/local/lib/python3.8/dist-packages/keras/engine/training.py", line 789, in train_step
  y_pred = self(x, training=True)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 418, in call
  return self._run_internal_graph(
File "/usr/local/lib/python3.8/dist-packages/keras/engine/functional.py", line 554, in _run_internal_graph
  outputs = node.layer(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 1046, in __call__
  outputs = call_fn(inputs, *args, **kwargs)
File "/notebooks/keras_layer.py", line 30, in call
  x = tf.map_fn(fn=self._f, elems=inputs)

	 [[while/model/relative_position/map/while]]

Stack trace for op definition: 
File "test_keras.py", line 375, in <module>
  history = model.fit(x_train, y_train, batch_size=200, epochs=1,
File "/usr/local/lib/python3.8/dist-packages/keras/engine/base_layer.py", line 3434, in wrapper
  return delegate_func(obj, *args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 1372, in _fit_delegate
  self.distribute_strategy.run(train_function,
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/opt/poplar/lib/python/libpvti_py3.py", line 425, in inner
  result = func(*args, **kwargs)
File "/usr/local/lib/python3.8/dist-packages/keras/ipu/extensions/extensions_base.py", line 504, in train_function
  for _ in tf.range(steps_per_execution):

	 [[while]] [Op:__inference_train_function_3504]
